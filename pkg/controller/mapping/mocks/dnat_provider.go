// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import net "net"
import v1 "k8s.io/api/core/v1"
import v1alpha1 "github.com/DevFactory/smartnat/pkg/apis/smartnat/v1alpha1"

// DNATProvider is an autogenerated mock type for the DNATProvider type
type DNATProvider struct {
	mock.Mock
}

// DeleteDNAT provides a mock function with given fields: externalIP, _a1
func (_m *DNATProvider) DeleteDNAT(externalIP net.IP, _a1 *v1alpha1.Mapping) error {
	ret := _m.Called(externalIP, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(net.IP, *v1alpha1.Mapping) error); ok {
		r0 = rf(externalIP, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetupDNAT provides a mock function with given fields: externalIP, _a1, svc, eps, setupMasquerade
func (_m *DNATProvider) SetupDNAT(externalIP net.IP, _a1 *v1alpha1.Mapping, svc *v1.Service, eps *v1.Endpoints, setupMasquerade bool) error {
	ret := _m.Called(externalIP, _a1, svc, eps, setupMasquerade)

	var r0 error
	if rf, ok := ret.Get(0).(func(net.IP, *v1alpha1.Mapping, *v1.Service, *v1.Endpoints, bool) error); ok {
		r0 = rf(externalIP, _a1, svc, eps, setupMasquerade)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
